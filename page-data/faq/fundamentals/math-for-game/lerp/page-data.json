{"componentChunkName":"component---src-templates-docs-js","path":"/faq/fundamentals/math-for-game/lerp","result":{"data":{"site":{"siteMetadata":{"title":".NET Thailand","docsLocation":"https://github.com/dotnetthailand/dotnetthailand.github.io","docsRepo":"dotnetthailand/dotnetthailand.github.io","docsLocationType":"github","editable":true,"contentRootPath":"content","siteUrl":"https://www.dotnetthailand.com"}},"mdx":{"fields":{"id":"1a58b30d-596a-5477-b1ea-3b955679d3a2","title":"Lerp","slug":"/faq/fundamentals/math-for-game/lerp"},"body":"function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\nvar _frontmatter = {\n  \"title\": \"Lerp\",\n  \"showMetadata\": true,\n  \"editable\": true,\n  \"showToc\": true\n};\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, [\"components\"]);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"section\", null, mdx(\"h1\", {\n    parentName: \"section\"\n  }, \"What is Lerp?\"), mdx(\"p\", {\n    parentName: \"section\"\n  }, mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"Lerp\"), \" \\u0E2B\\u0E23\\u0E37\\u0E2D \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"Linear interpolation\"), \"\\n\\u0E44\\u0E21\\u0E48\\u0E27\\u0E48\\u0E32\\u0E08\\u0E30\\u0E17\\u0E33\\u0E40\\u0E01\\u0E21\\u0E2B\\u0E23\\u0E37\\u0E2D\\u0E40\\u0E02\\u0E35\\u0E22\\u0E19 shader \\u0E1A\\u0E2D\\u0E01\\u0E44\\u0E14\\u0E49\\u0E40\\u0E25\\u0E22\\u0E27\\u0E48\\u0E32\\u0E40\\u0E23\\u0E32\\u0E44\\u0E21\\u0E48\\u0E2A\\u0E32\\u0E21\\u0E32\\u0E23\\u0E16\\u0E2B\\u0E25\\u0E35\\u0E01\\u0E2B\\u0E19\\u0E35 lerp \\u0E1E\\u0E49\\u0E19\\u0E41\\u0E25\\u0E30\\u0E43\\u0E0A\\u0E49\\u0E21\\u0E32\\u0E01\\u0E17\\u0E35\\u0E48\\u0E2A\\u0E38\\u0E14\\u0E04\\u0E23\\u0E31\\u0E1A\\u0E42\\u0E14\\u0E22\\u0E40\\u0E09\\u0E1E\\u0E32\\u0E30\\u0E16\\u0E49\\u0E32\\u0E43\\u0E04\\u0E23\\u0E40\\u0E02\\u0E35\\u0E22\\u0E19 Shader\\u0E21\\u0E32\\u0E01\\u0E48\\u0E2D\\u0E19\\u0E41\\u0E17\\u0E1A\\u0E17\\u0E38\\u0E01\\u0E2D\\u0E22\\u0E48\\u0E32\\u0E07\\u0E17\\u0E35\\u0E48\\u0E21\\u0E35\\u0E01\\u0E32\\u0E23 blend \\u0E01\\u0E31\\u0E19\\u0E02\\u0E2D\\u0E07\\u0E04\\u0E48\\u0E32\\u0E2D\\u0E30\\u0E44\\u0E23\\u0E2A\\u0E31\\u0E01\\u0E2D\\u0E22\\u0E48\\u0E32\\u0E07\\u0E08\\u0E30\\u0E15\\u0E49\\u0E2D\\u0E07\\u0E43\\u0E0A\\u0E49\\u0E40\\u0E08\\u0E49\\u0E32 lerp\\u0E19\\u0E35\\u0E48\\u0E41\\u0E19\\u0E48\\u0E19\\u0E2D\\u0E19\\u0E04\\u0E23\\u0E31\\u0E1A\\u0E40\\u0E1E\\u0E23\\u0E32\\u0E30\\u0E09\\u0E30\\u0E19\\u0E31\\u0E49\\u0E19\\u0E41\\u0E25\\u0E49\\u0E27\\u0E2B\\u0E19\\u0E35\\u0E22\\u0E31\\u0E07\\u0E44\\u0E07\\u0E01\\u0E47\\u0E44\\u0E21\\u0E48\\u0E1E\\u0E49\\u0E19\\u0E04\\u0E23\\u0E31\\u0E1A\\u0E40\\u0E23\\u0E32\\u0E21\\u0E32\\u0E23\\u0E39\\u0E49\\u0E08\\u0E31\\u0E01\\u0E21\\u0E31\\u0E19\\u0E01\\u0E31\\u0E19\\u0E40\\u0E25\\u0E22\\u0E14\\u0E35\\u0E01\\u0E27\\u0E48\\u0E32 \\u0E23\\u0E39\\u0E49\\u0E44\\u0E27\\u0E49\\u0E44\\u0E14\\u0E49\\u0E43\\u0E0A\\u0E49\\u0E41\\u0E19\\u0E48\\u0E19\\u0E2D\\u0E19\\u0E04\\u0E23\\u0E31\\u0E1A\\u0E2D\\u0E31\\u0E19\\u0E19\\u0E35\\u0E49\\u0E1A\\u0E2D\\u0E01\\u0E40\\u0E25\\u0E22 \")));\n}\n;\nMDXContent.isMDXComponent = true;","tableOfContents":{"items":[{"url":"#what-is-lerp","title":"What is Lerp?"}]},"timeToRead":1,"parent":{"__typename":"File","relativePath":"faq/fundamentals/math-for-game/lerp.md"},"frontmatter":{"metaTitle":null,"showMetadata":true,"editable":true,"showPreviousNext":null,"showToc":true}},"gitBranch":{"name":"main"},"gitCommit":{"hash":"4f1134accef463612ee63776f407d76ae8ca575f","date":"2022-01-30 12:02"}},"pageContext":{"id":"1a58b30d-596a-5477-b1ea-3b955679d3a2"}},"staticQueryHashes":["12478684","12478684","1306071104","2353585426","2353585426","2552263575","2552263575","2882937274","2882937274","353167761","353167761","3812332637","3812332637","4285724809"]}